<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oM+FM6SwHgAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC7axb/u2sW/7trFv+7axb/u2sW/wAAAAC7axb/AAAAALtrFv+7axb/u2sW/7tr
        Fv+7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7axb/AAAAAAAA
        AAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu2sW/wAA
        AAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtr
        Fv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv+7axb/u2sW/7trFv+7axb/AAAAAAAA
        AAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu2sW/wAA
        AAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtr
        Fv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAu2sW/7tr
        Fv+7axb/u2sW/7trFv8AAAAAAAAAAAAAAAC7axb/u2sW/7trFv+7axb/u2sW/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AACCgwAAv7sAAL+7AAC/uwAAv7sAAIO7AAD7uwAA+7sAAPu7AAD7uwAAg4MAAP//
        AAD//wAA//8AAA==
</value>
  </data>
</root>