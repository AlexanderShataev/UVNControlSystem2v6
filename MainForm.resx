<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        D3/37j8IBDa5xZolmgAAAABJRU5ErkJggg==
</value>
  </data>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>31</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC7axb/u2sW/7trFv+7axb/u2sW/wAAAAC7axb/AAAAALtrFv+7axb/u2sW/7tr
        Fv+7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC7axb/AAAAAAAA
        AAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu2sW/wAA
        AAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtr
        Fv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv+7axb/u2sW/7trFv+7axb/AAAAAAAA
        AAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAu2sW/wAA
        AAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALtr
        Fv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAC7axb/AAAAAAAAAAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAu2sW/wAAAAAAAAAAAAAAALtrFv8AAAAAAAAAAAAAAAC7axb/AAAAAAAAAAAAAAAAu2sW/7tr
        Fv+7axb/u2sW/7trFv8AAAAAAAAAAAAAAAC7axb/u2sW/7trFv+7axb/u2sW/wAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA//8AAP//AACCgwAAv7sAAL+7AAC/uwAAv7sAAIO7AAD7uwAA+7sAAPu7AAD7uwAAg4MAAP//
        AAD//wAA//8AAA==
</value>
  </data>
</root>